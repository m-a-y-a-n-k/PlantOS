{"version":3,"file":"static/js/441.c5516dd4.chunk.js","mappings":"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","sources":["components/Scenery/index.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport Sketch from \"react-p5\";\n\nconst PlantScenery = () => {\n  const [isDay, setIsDay] = useState(true);\n  const [trees, setTrees] = useState([]);\n  let t = 0;\n  let sunX = 0;\n  let clouds = [];\n  let birds = [];\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight).parent(canvasParentRef);\n    p5.angleMode(p5.DEGREES);\n\n    // Add initial trees positioned on the ground\n    const initialTrees = [];\n    for (let i = 0; i < 3; i++) {\n      initialTrees.push({\n        x: p5.random(p5.width * 0.2, p5.width * 0.8),\n        y: p5.height - 150, // Ground level\n        len: p5.random(80, 120),\n      });\n    }\n    setTrees(initialTrees);\n\n    // initial clouds\n    for (let i = 0; i < 5; i++) {\n      clouds.push({\n        x: p5.random(p5.width),\n        y: p5.random(50, 200),\n        speed: p5.random(0.3, 0.6),\n      });\n    }\n\n    // initial birds\n    for (let i = 0; i < 3; i++) {\n      birds.push({\n        x: p5.random(p5.width),\n        y: p5.random(100, 300),\n        speed: p5.random(1, 2),\n      });\n    }\n\n    sunX = 0;\n  };\n\n  const drawTooltip = (x, y, msg, p5) => {\n    p5.textSize(16);\n    let w = p5.textWidth(msg) + 24;\n    let h = 30;\n    let tx = p5.constrain(x + 25, 20, p5.width - w - 20);\n    let ty = p5.constrain(y - 25, 20, p5.height - h - 20);\n    // Text\n    p5.fill(255);\n    p5.noStroke();\n    p5.textAlign(p5.CENTER, p5.CENTER);\n    p5.text(msg, tx + w / 2, ty + h / 2);\n  };\n\n  const drawSky = (p5) => {\n    for (let y = 0; y < p5.height; y++) {\n      let inter = p5.map(y, 0, p5.height, 0, 1);\n      let c1 = isDay ? p5.color(255, 204, 153) : p5.color(20, 24, 60);\n      let c2 = isDay ? p5.color(153, 204, 255) : p5.color(10, 15, 35);\n      p5.stroke(p5.lerpColor(c1, c2, inter));\n      p5.line(0, y, p5.width, y);\n    }\n  };\n\n  const drawSun = (p5) => {\n    const sunY = p5.map(\n      p5.sin(p5.map(sunX, 0, p5.width, 0, 180)),\n      -1,\n      1,\n      p5.height - 100,\n      100\n    );\n    const glow = p5.map(\n      p5.dist(p5.mouseX, p5.mouseY, sunX, sunY),\n      0,\n      150,\n      255,\n      80\n    );\n    p5.noStroke();\n    p5.fill(\n      isDay ? p5.color(255, 204, 0, glow) : p5.color(230, 230, 255, glow)\n    );\n    p5.ellipse(sunX, sunY, 100, 100);\n  };\n\n  const drawMountains = (p5) => {\n    p5.noStroke();\n    p5.fill(isDay ? 80 : 30);\n    p5.triangle(\n      p5.width * 0.1,\n      p5.height - 150,\n      p5.width * 0.4,\n      p5.height - 400,\n      p5.width * 0.7,\n      p5.height - 150\n    );\n    p5.fill(isDay ? 120 : 50);\n    p5.triangle(\n      p5.width * 0.5,\n      p5.height - 150,\n      p5.width * 0.8,\n      p5.height - 350,\n      p5.width * 1.05,\n      p5.height - 150\n    );\n  };\n\n  const drawGround = (p5) => {\n    p5.noStroke();\n    p5.fill(isDay ? p5.color(34, 139, 34) : p5.color(10, 70, 10));\n    p5.rect(0, p5.height - 150, p5.width, 150);\n  };\n\n  const drawTrees = (p5) => {\n    for (const tree of trees) {\n      p5.push();\n      p5.translate(tree.x, tree.y);\n      drawBranch(p5, tree.len);\n      p5.pop();\n    }\n  };\n\n  const drawBranch = (p5, len) => {\n    p5.strokeWeight(p5.map(len, 10, 100, 1, 5));\n    p5.stroke(90, 50, 20);\n    p5.line(0, 0, 0, -len);\n    p5.translate(0, -len);\n    if (len > 10) {\n      p5.push();\n      p5.rotate(20 + p5.noise(t) * 5);\n      drawBranch(p5, len * 0.7);\n      p5.pop();\n\n      p5.push();\n      p5.rotate(-20 - p5.noise(t) * 5);\n      drawBranch(p5, len * 0.7);\n      p5.pop();\n    } else {\n      p5.fill(0, p5.random(200, 255), 0, 180);\n      p5.noStroke();\n      p5.ellipse(0, 0, p5.random(8, 14), p5.random(8, 14));\n    }\n  };\n\n  const drawWind = (p5) => {\n    t += 0.005;\n    const offset = p5.noise(t) * 10;\n    p5.stroke(255, 255, 255, 30);\n    p5.noFill();\n    p5.beginShape();\n    for (let x = 0; x < p5.width; x += 20) {\n      const y = p5.height - 140 + p5.sin(x * 0.01 + t * 2) * offset;\n      p5.vertex(x, y);\n    }\n    p5.endShape();\n  };\n\n  const drawClouds = (p5) => {\n    p5.noStroke();\n    p5.fill(255, 255, 255, 200);\n    for (let c of clouds) {\n      p5.ellipse(c.x, c.y, 60, 40);\n      p5.ellipse(c.x + 30, c.y + 10, 50, 30);\n      p5.ellipse(c.x - 30, c.y + 10, 50, 30);\n      c.x += c.speed;\n      if (c.x > p5.width + 50) c.x = -60;\n    }\n  };\n\n  const drawBirds = (p5) => {\n    p5.fill(0);\n    p5.noStroke();\n    for (let b of birds) {\n      drawBirdShape(p5, b.x, b.y);\n      b.x += b.speed;\n      if (b.x > p5.width + 20) {\n        b.x = -50;\n        b.y = p5.random(100, 300);\n      }\n    }\n  };\n\n  const drawBirdShape = (p5, x, y) => {\n    p5.push();\n    p5.translate(x, y);\n    p5.beginShape();\n    p5.vertex(0, 0);\n    p5.vertex(10, -5);\n    p5.vertex(20, 0);\n    p5.vertex(10, -2);\n    p5.endShape(p5.CLOSE);\n    p5.pop();\n  };\n\n  const mousePressed = (p5) => {\n    if (p5.mouseY > p5.height - 150) {\n      setTrees((prev) => [\n        ...prev,\n        {\n          x: p5.mouseX,\n          y: p5.height - 150, // Position trees at ground level\n          len: p5.random(80, 120),\n        },\n      ]);\n    }\n  };\n\n  const keyPressed = (p5) => {\n    if (p5.key === \"t\" || p5.key === \"T\") {\n      setIsDay((prev) => !prev);\n    }\n  };\n\n  const windowResized = (p5) => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n  };\n\n  const draw = (p5) => {\n    drawSky(p5);\n    drawSun(p5);\n    drawMountains(p5);\n    drawGround(p5);\n    drawClouds(p5);\n    drawBirds(p5);\n    drawTrees(p5);\n    drawWind(p5);\n    drawTooltip(p5.width / 2, p5.height - 100, \"Tap on the grass to plant trees!\", p5);\n\n    sunX += 0.2;\n    if (sunX > p5.width) sunX = 0;\n  };\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"100%\" }}>\n      <Sketch\n        setup={setup}\n        draw={draw}\n        mousePressed={mousePressed}\n        keyPressed={keyPressed}\n        windowResized={windowResized}\n      />\n\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"5%\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          color: \"#fff\",\n          fontSize: \"1.2rem\",\n          textAlign: \"center\",\n          padding: \"1rem\",\n          maxWidth: \"600px\",\n          fontFamily: \"Georgia, serif\",\n          backgroundColor: \"rgba(0,0,0,0.4)\",\n          borderRadius: \"12px\",\n          backdropFilter: \"blur(4px)\",\n        }}\n      >\n        <strong>\n          We should always strive for a healthier and greener planet for us and\n          our future generations.\n        </strong>\n      </div>\n    </div>\n  );\n};\n\nexport default PlantScenery;\n"],"names":["PlantScenery","isDay","setIsDay","useState","trees","setTrees","t","sunX","clouds","birds","drawBranch","p5","len","strokeWeight","map","stroke","line","translate","push","rotate","noise","pop","fill","random","noStroke","ellipse","drawBirdShape","x","y","beginShape","vertex","endShape","CLOSE","_jsxs","style","position","width","height","children","_jsx","Sketch","setup","canvasParentRef","createCanvas","windowWidth","windowHeight","parent","angleMode","DEGREES","initialTrees","i","speed","draw","inter","c1","color","c2","lerpColor","drawSky","sunY","sin","glow","dist","mouseX","mouseY","drawSun","triangle","drawMountains","rect","drawGround","c","drawClouds","b","drawBirds","tree","drawTrees","offset","noFill","drawWind","drawTooltip","msg","textSize","w","textWidth","tx","constrain","ty","textAlign","CENTER","text","h","mousePressed","prev","keyPressed","key","windowResized","resizeCanvas","top","left","transform","fontSize","padding","maxWidth","fontFamily","backgroundColor","borderRadius","backdropFilter"],"sourceRoot":""}